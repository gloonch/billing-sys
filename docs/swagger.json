{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/buildings": {
            "get": {
                "description": "Retrieves a list of all buildings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buildings"
                ],
                "summary": "List all buildings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.GetBuildingOutput"
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new building to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buildings"
                ],
                "summary": "Create a new building",
                "parameters": [
                    {
                        "description": "Building data",
                        "name": "building",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateBuildingInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateBuildingOutput"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/buildings/{id}": {
            "get": {
                "description": "Retrieves details of a building using its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buildings"
                ],
                "summary": "Get details of a specific building",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Building ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetBuildingOutput"
                        }
                    },
                    "400": {
                        "description": "Invalid URL or ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the details of a specific building by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buildings"
                ],
                "summary": "Update a building's details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Building ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated building data",
                        "name": "building",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateBuildingInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateBuildingOutput"
                        }
                    },
                    "400": {
                        "description": "Invalid URL, ID, or input data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a building by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buildings"
                ],
                "summary": "Delete a building",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Building ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Building deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid URL or ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/buildings/{id}/charges/{strategy}": {
            "get": {
                "description": "Calculates the charges for a building using a specified strategy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buildings"
                ],
                "summary": "Calculate charges for a building",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Building ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Charge calculation strategy: 1 (Area-Based), 2 (Occupant-Based), 3 (Combined)",
                        "name": "strategy",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Map of unit IDs to calculated charges",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "number"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid URL, ID, or strategy",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/payments": {
            "post": {
                "description": "Adds a new payment to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "Create a new payment",
                "parameters": [
                    {
                        "description": "Payment data",
                        "name": "payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePaymentInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePaymentOutput"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/payments/unit/{unit_id}": {
            "get": {
                "description": "Retrieves a list of all payments associated with a specific unit ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "List payments for a specific unit",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Unit ID",
                        "name": "unit_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.CreatePaymentOutput"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid URL or ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/payments/{id}": {
            "delete": {
                "description": "Deletes a payment by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "Delete a payment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Payment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid URL or ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/units": {
            "get": {
                "description": "Retrieves a list of all units in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "units"
                ],
                "summary": "Retrieve all units",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.GetUnitOutput"
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new unit to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "units"
                ],
                "summary": "Create a new unit",
                "parameters": [
                    {
                        "description": "Unit data",
                        "name": "unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUnitInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUnitOutput"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/units/{id}": {
            "get": {
                "description": "Retrieves the details of a unit by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "units"
                ],
                "summary": "Retrieve a specific unit",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Unit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetUnitOutput"
                        }
                    },
                    "400": {
                        "description": "Invalid URL or ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the details of a specific unit by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "units"
                ],
                "summary": "Update a unit",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Unit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated unit data",
                        "name": "unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUnitInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetUnitOutput"
                        }
                    },
                    "400": {
                        "description": "Invalid URL, ID, or input data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a unit by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "units"
                ],
                "summary": "Delete a unit",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Unit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unit deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid URL or ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateBuildingInput": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Main St"
                },
                "name": {
                    "type": "string",
                    "example": "Building 1"
                },
                "total_area": {
                    "type": "number",
                    "example": 10
                },
                "total_units": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.CreateBuildingOutput": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Main St"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Building 1"
                },
                "total_area": {
                    "type": "number",
                    "example": 10
                },
                "total_units": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.CreatePaymentInput": {
            "type": "object",
            "required": [
                "amount",
                "description",
                "payment_date",
                "unit_id"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 10
                },
                "description": {
                    "type": "string",
                    "example": "some description here"
                },
                "payment_date": {
                    "type": "string",
                    "example": "2020-01-01"
                },
                "unit_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.CreatePaymentOutput": {
            "type": "object",
            "required": [
                "amount",
                "description",
                "payment_date",
                "unit_id"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 10
                },
                "description": {
                    "type": "string",
                    "example": "some description here"
                },
                "id": {
                    "type": "integer"
                },
                "payment_date": {
                    "type": "string",
                    "example": "2020-01-01"
                },
                "unit_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.CreateUnitInput": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "number",
                    "example": 100
                },
                "building_id": {
                    "type": "integer",
                    "example": 0
                },
                "occupants_count": {
                    "type": "integer",
                    "example": 10
                },
                "unit_number": {
                    "type": "string",
                    "example": "100"
                }
            }
        },
        "dto.CreateUnitOutput": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "number"
                },
                "building_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "occupants_count": {
                    "type": "integer"
                },
                "unit_number": {
                    "type": "string"
                }
            }
        },
        "dto.GetBuildingOutput": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "total_area": {
                    "type": "number"
                },
                "total_units": {
                    "type": "integer"
                }
            }
        },
        "dto.GetUnitOutput": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "total_area": {
                    "type": "number"
                },
                "total_units": {
                    "type": "integer"
                }
            }
        },
        "dto.UpdateBuildingInput": {
            "type": "object",
            "required": [
                "address",
                "id",
                "name",
                "total_area",
                "total_units"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "1st Street"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Building"
                },
                "total_area": {
                    "type": "number",
                    "example": 20.2
                },
                "total_units": {
                    "type": "integer",
                    "example": 22
                }
            }
        },
        "dto.UpdateBuildingOutput": {
            "type": "object",
            "required": [
                "address",
                "id",
                "name",
                "total_area",
                "total_units"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "1st Street"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Building"
                },
                "total_area": {
                    "type": "number",
                    "example": 20.2
                },
                "total_units": {
                    "type": "integer",
                    "example": 22
                }
            }
        }
    }
}